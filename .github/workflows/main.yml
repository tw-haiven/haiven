name: Haiven
run-name: Test and Build

env:
  REGISTRY: "ghcr.io"

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.vscode/**'
      - 'docs/**'
      - 'README.md'
      - '.gitignore'
  workflow_dispatch: # allows for manual invocation

jobs:

  Test:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
    steps:
      - uses: 'actions/checkout@v4.1.1'
      - name: Set up Python
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: pre-commit/action@v3.0.1
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Install App dependencies
        run: |
          cd app
          poetry install --no-interaction --no-root
      - name: Run App unit tests
        run: |
          cd app
          poetry run pytest -m 'not integration' tests/
      - name: Install CLI dependencies
        run: |
          cd cli && \
          poetry install --no-interaction --no-root
      - name: Run tests
        run: |
          cd cli && \
          poetry run pytest tests/

  Build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [Test]
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    outputs:
      image_digest: ${{ steps.kaniko-base.outputs.digest }}
    steps:
      - uses: 'actions/checkout@v4.1.1'

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}

      - name: Kaniko build base image
        id: 'kaniko-base'
        uses: int128/kaniko-action@v1
        with:
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache: true
          cache-repository: ${{ env.REGISTRY }}/${{ github.repository }}/cache
          push: true
          context: .

      # The fine-grained access tokens used by these requests need to have read & write access to "Contents"
      # (Explored GH Webhooks instead of these steps instead, but couldn't get the auth to work)
      # - name: Notify sample knowledge pack
      #   run: |
      #     curl -L \
      #       -X POST \
      #       -H "Accept: application/vnd.github+json" \
      #       -H "Authorization: Bearer ${{ secrets.DISPATCH_SAMPLE_PACK_TOKEN }}" \
      #       -H "X-GitHub-Api-Version: 2022-11-28" \
      #       https://api.github.com/repos/tw-haiven/haiven-sample-knowledge-pack/dispatches \
      #       -d '{"event_type":"haiven-base-new","client_payload":{}}'

      - name: Notify TW demo deployment
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.DISPATCH_TW_DEMO_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/tw-haiven/haiven-tw-demo-deployment/dispatches \
            -d '{"event_type":"haiven-base-new","client_payload":{}}'
